- kind: listener
  name: listener
  protocol: http
  port: '{{ .PORT }}'
  ports:
    out:
      - name: router
        port: in
    error:
      - name: catch
        port: in

- kind: router
  name: router
  routes:
    - method: POST
      path: /v1/specs
      port: out[0]
    - method: GET
      path: /v1/specs
      port: out[1]
    - method: PATCH
      path: /v1/specs
      port: out[2]
    - method: DELETE
      path: /v1/specs
      port: out[3]
    - method: POST
      path: /v1/secrets
      port: out[4]
    - method: GET
      path: /v1/secrets
      port: out[5]
    - method: PATCH
      path: /v1/secrets
      port: out[6]
    - method: DELETE
      path: /v1/secrets
      port: out[7]
    - method: POST
      path: /v1/charts
      port: out[8]
    - method: GET
      path: /v1/charts
      port: out[9]
    - method: PATCH
      path: /v1/charts
      port: out[10]
    - method: DELETE
      path: /v1/charts
      port: out[11]
  ports:
    out[0]:
      - name: specs_create
        port: in
    out[1]:
      - name: specs_read
        port: in
    out[2]:
      - name: specs_update
        port: in
    out[3]:
      - name: specs_delete
        port: in
    out[4]:
      - name: secrets_create
        port: in
    out[5]:
      - name: secrets_read
        port: in
    out[6]:
      - name: secrets_update
        port: in
    out[7]:
      - name: secrets_delete
        port: in
    out[8]:
      - name: charts_create
        port: in
    out[9]:
      - name: charts_read
        port: in
    out[10]:
      - name: charts_update
        port: in
    out[11]:
      - name: charts_delete
        port: in

- kind: block
  name: specs_create
  specs:
    - kind: snippet
      language: cel
      code: 'has(self.body) ? self.body : null'
    - kind: native
      opcode: specs.create
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            body: args,
            status: 201
          };
        }

- kind: block
  name: specs_read
  specs:
    - kind: snippet
      language: json
      code: 'null'
    - kind: native
      opcode: specs.read
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            body: args,
            status: 200
          };
        }

- kind: block
  name: specs_update
  specs:
    - kind: snippet
      language: cel
      code: 'has(self.body) ? self.body : null'
    - kind: native
      opcode: specs.update
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            body: args,
            status: 200
          };
        }

- kind: block
  name: specs_delete
  specs:
    - kind: snippet
      language: json
      code: 'null'
    - kind: native
      opcode: specs.delete
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            status: 204
          };
        }

- kind: block
  name: secrets_create
  specs:
    - kind: snippet
      language: cel
      code: 'has(self.body) ? self.body : null'
    - kind: native
      opcode: secrets.create
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            body: args,
            status: 201
          };
        }

- kind: block
  name: secrets_read
  specs:
    - kind: snippet
      language: json
      code: 'null'
    - kind: native
      opcode: secrets.read
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            body: args,
            status: 200
          };
        }

- kind: block
  name: secrets_update
  specs:
    - kind: snippet
      language: cel
      code: 'has(self.body) ? self.body : null'
    - kind: native
      opcode: secrets.update
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            body: args,
            status: 200
          };
        }

- kind: block
  name: secrets_delete
  specs:
    - kind: snippet
      language: json
      code: 'null'
    - kind: native
      opcode: secrets.delete
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            status: 204
          };
        }

- kind: block
  name: charts_create
  specs:
    - kind: snippet
      language: cel
      code: 'has(self.body) ? self.body : null'
    - kind: native
      opcode: charts.create
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            body: args,
            status: 201
          };
        }

- kind: block
  name: charts_read
  specs:
    - kind: snippet
      language: json
      code: 'null'
    - kind: native
      opcode: charts.read
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            body: args,
            status: 200
          };
        }

- kind: block
  name: charts_update
  specs:
    - kind: snippet
      language: cel
      code: 'has(self.body) ? self.body : null'
    - kind: native
      opcode: charts.update
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            body: args,
            status: 200
          };
        }

- kind: block
  name: charts_delete
  specs:
    - kind: snippet
      language: json
      code: 'null'
    - kind: native
      opcode: charts.delete
    - kind: snippet
      language: javascript
      code: |
        export default function (args) {
          return {
            status: 204
          };
        }

- kind: switch
  name: catch
  matches:
    - when: self == "unsupported type" || self == "unsupported value"
      port: out[0]
    - when: 'true'
      port: out[1]
  ports:
    out[0]:
      - name: status_400
        port: in
    out[1]:
      - name: status_500
        port: in

- kind: snippet
  name: status_400
  language: javascript
  code: |
    export default function (args) {
      return {
        body: {
          error: args.error()
        },
        status: 400
      };
    }

- kind: snippet
  name: status_500
  language: json
  code: |
    {
      "body": {
        "error": "Internal Server Error"
      },
      "status": 500
    }
