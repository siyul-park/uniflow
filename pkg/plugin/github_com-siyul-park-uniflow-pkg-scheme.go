// Code generated by 'yaegi extract github.com/siyul-park/uniflow/pkg/scheme'. DO NOT EDIT.

package plugin

import (
	"github.com/siyul-park/uniflow/pkg/node"
	"github.com/siyul-park/uniflow/pkg/scheme"
	"github.com/siyul-park/uniflow/pkg/spec"
	"reflect"
)

func init() {
	Symbols["github.com/siyul-park/uniflow/pkg/scheme/scheme"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CodecFunc":    reflect.ValueOf(scheme.CodecFunc),
		"New":          reflect.ValueOf(scheme.New),
		"NewBuilder":   reflect.ValueOf(scheme.NewBuilder),
		"RegisterFunc": reflect.ValueOf(scheme.RegisterFunc),

		// type definitions
		"Builder":  reflect.ValueOf((*scheme.Builder)(nil)),
		"Codec":    reflect.ValueOf((*scheme.Codec)(nil)),
		"Register": reflect.ValueOf((*scheme.Register)(nil)),
		"Scheme":   reflect.ValueOf((*scheme.Scheme)(nil)),

		// interface wrapper definitions
		"_Codec":    reflect.ValueOf((*_github_com_siyul_park_uniflow_pkg_scheme_Codec)(nil)),
		"_Register": reflect.ValueOf((*_github_com_siyul_park_uniflow_pkg_scheme_Register)(nil)),
	}
}

// _github_com_siyul_park_uniflow_pkg_scheme_Codec is an interface wrapper for Codec type
type _github_com_siyul_park_uniflow_pkg_scheme_Codec struct {
	IValue   interface{}
	WCompile func(sp spec.Spec) (node.Node, error)
}

func (W _github_com_siyul_park_uniflow_pkg_scheme_Codec) Compile(sp spec.Spec) (node.Node, error) {
	return W.WCompile(sp)
}

// _github_com_siyul_park_uniflow_pkg_scheme_Register is an interface wrapper for Register type
type _github_com_siyul_park_uniflow_pkg_scheme_Register struct {
	IValue       interface{}
	WAddToScheme func(a0 *scheme.Scheme) error
}

func (W _github_com_siyul_park_uniflow_pkg_scheme_Register) AddToScheme(a0 *scheme.Scheme) error {
	return W.WAddToScheme(a0)
}
