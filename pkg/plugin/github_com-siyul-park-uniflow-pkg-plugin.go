// Code generated by 'yaegi extract github.com/siyul-park/uniflow/pkg/plugin'. DO NOT EDIT.

package plugin

import (
	"context"
	"reflect"
)

func init() {
	Symbols["github.com/siyul-park/uniflow/pkg/plugin/plugin"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ErrConflict":          reflect.ValueOf(&ErrConflict).Elem(),
		"ErrInvalidSignature":  reflect.ValueOf(&ErrInvalidSignature).Elem(),
		"ErrMissingDependency": reflect.ValueOf(&ErrMissingDependency).Elem(),
		"ErrNotFound":          reflect.ValueOf(&ErrNotFound).Elem(),
		"MapTypes":             reflect.ValueOf(&MapTypes).Elem(),
		"NewLoader":            reflect.ValueOf(NewLoader),
		"NewRegistry":          reflect.ValueOf(NewRegistry),
		"Symbols":              reflect.ValueOf(&Symbols).Elem(),

		// type definitions
		"Loader":   reflect.ValueOf((*Loader)(nil)),
		"Plugin":   reflect.ValueOf((*Plugin)(nil)),
		"Registry": reflect.ValueOf((*Registry)(nil)),

		// interface wrapper definitions
		"_Plugin": reflect.ValueOf((*_github_com_siyul_park_uniflow_pkg_plugin_Plugin)(nil)),
	}
}

// _github_com_siyul_park_uniflow_pkg_plugin_Plugin is an interface wrapper for Plugin type
type _github_com_siyul_park_uniflow_pkg_plugin_Plugin struct {
	IValue   interface{}
	WLoad    func(ctx context.Context) error
	WName    func() string
	WUnload  func(ctx context.Context) error
	WVersion func() string
}

func (W _github_com_siyul_park_uniflow_pkg_plugin_Plugin) Load(ctx context.Context) error {
	return W.WLoad(ctx)
}
func (W _github_com_siyul_park_uniflow_pkg_plugin_Plugin) Name() string {
	return W.WName()
}
func (W _github_com_siyul_park_uniflow_pkg_plugin_Plugin) Unload(ctx context.Context) error {
	return W.WUnload(ctx)
}
func (W _github_com_siyul_park_uniflow_pkg_plugin_Plugin) Version() string {
	return W.WVersion()
}
