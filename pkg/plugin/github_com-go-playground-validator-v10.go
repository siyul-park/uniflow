// Code generated by 'yaegi extract github.com/go-playground/validator/v10'. DO NOT EDIT.

package plugin

import (
	"github.com/go-playground/universal-translator"
	"github.com/go-playground/validator/v10"
	"reflect"
)

func init() {
	Symbols["github.com/go-playground/validator/v10/validator"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"New":                        reflect.ValueOf(validator.New),
		"WithPrivateFieldValidation": reflect.ValueOf(validator.WithPrivateFieldValidation),
		"WithRequiredStructEnabled":  reflect.ValueOf(validator.WithRequiredStructEnabled),

		// type definitions
		"CustomTypeFunc":               reflect.ValueOf((*validator.CustomTypeFunc)(nil)),
		"FieldError":                   reflect.ValueOf((*validator.FieldError)(nil)),
		"FieldLevel":                   reflect.ValueOf((*validator.FieldLevel)(nil)),
		"FilterFunc":                   reflect.ValueOf((*validator.FilterFunc)(nil)),
		"Func":                         reflect.ValueOf((*validator.Func)(nil)),
		"FuncCtx":                      reflect.ValueOf((*validator.FuncCtx)(nil)),
		"InvalidValidationError":       reflect.ValueOf((*validator.InvalidValidationError)(nil)),
		"Option":                       reflect.ValueOf((*validator.Option)(nil)),
		"RegisterTranslationsFunc":     reflect.ValueOf((*validator.RegisterTranslationsFunc)(nil)),
		"StructLevel":                  reflect.ValueOf((*validator.StructLevel)(nil)),
		"StructLevelFunc":              reflect.ValueOf((*validator.StructLevelFunc)(nil)),
		"StructLevelFuncCtx":           reflect.ValueOf((*validator.StructLevelFuncCtx)(nil)),
		"TagNameFunc":                  reflect.ValueOf((*validator.TagNameFunc)(nil)),
		"TranslationFunc":              reflect.ValueOf((*validator.TranslationFunc)(nil)),
		"Validate":                     reflect.ValueOf((*validator.Validate)(nil)),
		"ValidationErrors":             reflect.ValueOf((*validator.ValidationErrors)(nil)),
		"ValidationErrorsTranslations": reflect.ValueOf((*validator.ValidationErrorsTranslations)(nil)),

		// interface wrapper definitions
		"_FieldError":  reflect.ValueOf((*_github_com_go_playground_validator_v10_FieldError)(nil)),
		"_FieldLevel":  reflect.ValueOf((*_github_com_go_playground_validator_v10_FieldLevel)(nil)),
		"_StructLevel": reflect.ValueOf((*_github_com_go_playground_validator_v10_StructLevel)(nil)),
	}
}

// _github_com_go_playground_validator_v10_FieldError is an interface wrapper for FieldError type
type _github_com_go_playground_validator_v10_FieldError struct {
	IValue           interface{}
	WActualTag       func() string
	WError           func() string
	WField           func() string
	WKind            func() reflect.Kind
	WNamespace       func() string
	WParam           func() string
	WStructField     func() string
	WStructNamespace func() string
	WTag             func() string
	WTranslate       func(ut ut.Translator) string
	WType            func() reflect.Type
	WValue           func() interface{}
}

func (W _github_com_go_playground_validator_v10_FieldError) ActualTag() string {
	return W.WActualTag()
}
func (W _github_com_go_playground_validator_v10_FieldError) Error() string {
	return W.WError()
}
func (W _github_com_go_playground_validator_v10_FieldError) Field() string {
	return W.WField()
}
func (W _github_com_go_playground_validator_v10_FieldError) Kind() reflect.Kind {
	return W.WKind()
}
func (W _github_com_go_playground_validator_v10_FieldError) Namespace() string {
	return W.WNamespace()
}
func (W _github_com_go_playground_validator_v10_FieldError) Param() string {
	return W.WParam()
}
func (W _github_com_go_playground_validator_v10_FieldError) StructField() string {
	return W.WStructField()
}
func (W _github_com_go_playground_validator_v10_FieldError) StructNamespace() string {
	return W.WStructNamespace()
}
func (W _github_com_go_playground_validator_v10_FieldError) Tag() string {
	return W.WTag()
}
func (W _github_com_go_playground_validator_v10_FieldError) Translate(ut ut.Translator) string {
	return W.WTranslate(ut)
}
func (W _github_com_go_playground_validator_v10_FieldError) Type() reflect.Type {
	return W.WType()
}
func (W _github_com_go_playground_validator_v10_FieldError) Value() interface{} {
	return W.WValue()
}

// _github_com_go_playground_validator_v10_FieldLevel is an interface wrapper for FieldLevel type
type _github_com_go_playground_validator_v10_FieldLevel struct {
	IValue                     interface{}
	WExtractType               func(field reflect.Value) (value reflect.Value, kind reflect.Kind, nullable bool)
	WField                     func() reflect.Value
	WFieldName                 func() string
	WGetStructFieldOK          func() (reflect.Value, reflect.Kind, bool)
	WGetStructFieldOK2         func() (reflect.Value, reflect.Kind, bool, bool)
	WGetStructFieldOKAdvanced  func(val reflect.Value, namespace string) (reflect.Value, reflect.Kind, bool)
	WGetStructFieldOKAdvanced2 func(val reflect.Value, namespace string) (reflect.Value, reflect.Kind, bool, bool)
	WGetTag                    func() string
	WParam                     func() string
	WParent                    func() reflect.Value
	WStructFieldName           func() string
	WTop                       func() reflect.Value
}

func (W _github_com_go_playground_validator_v10_FieldLevel) ExtractType(field reflect.Value) (value reflect.Value, kind reflect.Kind, nullable bool) {
	return W.WExtractType(field)
}
func (W _github_com_go_playground_validator_v10_FieldLevel) Field() reflect.Value {
	return W.WField()
}
func (W _github_com_go_playground_validator_v10_FieldLevel) FieldName() string {
	return W.WFieldName()
}
func (W _github_com_go_playground_validator_v10_FieldLevel) GetStructFieldOK() (reflect.Value, reflect.Kind, bool) {
	return W.WGetStructFieldOK()
}
func (W _github_com_go_playground_validator_v10_FieldLevel) GetStructFieldOK2() (reflect.Value, reflect.Kind, bool, bool) {
	return W.WGetStructFieldOK2()
}
func (W _github_com_go_playground_validator_v10_FieldLevel) GetStructFieldOKAdvanced(val reflect.Value, namespace string) (reflect.Value, reflect.Kind, bool) {
	return W.WGetStructFieldOKAdvanced(val, namespace)
}
func (W _github_com_go_playground_validator_v10_FieldLevel) GetStructFieldOKAdvanced2(val reflect.Value, namespace string) (reflect.Value, reflect.Kind, bool, bool) {
	return W.WGetStructFieldOKAdvanced2(val, namespace)
}
func (W _github_com_go_playground_validator_v10_FieldLevel) GetTag() string {
	return W.WGetTag()
}
func (W _github_com_go_playground_validator_v10_FieldLevel) Param() string {
	return W.WParam()
}
func (W _github_com_go_playground_validator_v10_FieldLevel) Parent() reflect.Value {
	return W.WParent()
}
func (W _github_com_go_playground_validator_v10_FieldLevel) StructFieldName() string {
	return W.WStructFieldName()
}
func (W _github_com_go_playground_validator_v10_FieldLevel) Top() reflect.Value {
	return W.WTop()
}

// _github_com_go_playground_validator_v10_StructLevel is an interface wrapper for StructLevel type
type _github_com_go_playground_validator_v10_StructLevel struct {
	IValue                  interface{}
	WCurrent                func() reflect.Value
	WExtractType            func(field reflect.Value) (value reflect.Value, kind reflect.Kind, nullable bool)
	WParent                 func() reflect.Value
	WReportError            func(field interface{}, fieldName string, structFieldName string, tag string, param string)
	WReportValidationErrors func(relativeNamespace string, relativeActualNamespace string, errs validator.ValidationErrors)
	WTop                    func() reflect.Value
	WValidator              func() *validator.Validate
}

func (W _github_com_go_playground_validator_v10_StructLevel) Current() reflect.Value {
	return W.WCurrent()
}
func (W _github_com_go_playground_validator_v10_StructLevel) ExtractType(field reflect.Value) (value reflect.Value, kind reflect.Kind, nullable bool) {
	return W.WExtractType(field)
}
func (W _github_com_go_playground_validator_v10_StructLevel) Parent() reflect.Value {
	return W.WParent()
}
func (W _github_com_go_playground_validator_v10_StructLevel) ReportError(field interface{}, fieldName string, structFieldName string, tag string, param string) {
	W.WReportError(field, fieldName, structFieldName, tag, param)
}
func (W _github_com_go_playground_validator_v10_StructLevel) ReportValidationErrors(relativeNamespace string, relativeActualNamespace string, errs validator.ValidationErrors) {
	W.WReportValidationErrors(relativeNamespace, relativeActualNamespace, errs)
}
func (W _github_com_go_playground_validator_v10_StructLevel) Top() reflect.Value {
	return W.WTop()
}
func (W _github_com_go_playground_validator_v10_StructLevel) Validator() *validator.Validate {
	return W.WValidator()
}
