// Code generated by 'yaegi extract github.com/siyul-park/uniflow/pkg/value'. DO NOT EDIT.

package plugin

import (
	"github.com/siyul-park/uniflow/pkg/value"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/siyul-park/uniflow/pkg/value/value"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"KeyAnnotations": reflect.ValueOf(constant.MakeFromLiteral("\"annotations\"", token.STRING, 0)),
		"KeyData":        reflect.ValueOf(constant.MakeFromLiteral("\"data\"", token.STRING, 0)),
		"KeyID":          reflect.ValueOf(constant.MakeFromLiteral("\"id\"", token.STRING, 0)),
		"KeyName":        reflect.ValueOf(constant.MakeFromLiteral("\"name\"", token.STRING, 0)),
		"KeyNamespace":   reflect.ValueOf(constant.MakeFromLiteral("\"namespace\"", token.STRING, 0)),
		"New":            reflect.ValueOf(value.New),

		// type definitions
		"Value": reflect.ValueOf((*value.Value)(nil)),
	}
}
