// Code generated by 'yaegi extract github.com/siyul-park/uniflow/pkg/hook'. DO NOT EDIT.

package plugin

import (
	"github.com/siyul-park/uniflow/pkg/hook"
	"reflect"
)

func init() {
	Symbols["github.com/siyul-park/uniflow/pkg/hook/hook"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"New":          reflect.ValueOf(hook.New),
		"NewBuilder":   reflect.ValueOf(hook.NewBuilder),
		"RegisterFunc": reflect.ValueOf(hook.RegisterFunc),

		// type definitions
		"Builder":  reflect.ValueOf((*hook.Builder)(nil)),
		"Hook":     reflect.ValueOf((*hook.Hook)(nil)),
		"Register": reflect.ValueOf((*hook.Register)(nil)),

		// interface wrapper definitions
		"_Register": reflect.ValueOf((*_github_com_siyul_park_uniflow_pkg_hook_Register)(nil)),
	}
}

// _github_com_siyul_park_uniflow_pkg_hook_Register is an interface wrapper for Register type
type _github_com_siyul_park_uniflow_pkg_hook_Register struct {
	IValue     interface{}
	WAddToHook func(a0 *hook.Hook) error
}

func (W _github_com_siyul_park_uniflow_pkg_hook_Register) AddToHook(a0 *hook.Hook) error {
	return W.WAddToHook(a0)
}
