// Code generated by 'yaegi extract github.com/siyul-park/uniflow/pkg/language'. DO NOT EDIT.

package plugin

import (
	"context"
	"github.com/siyul-park/uniflow/pkg/language"
	"reflect"
)

func init() {
	Symbols["github.com/siyul-park/uniflow/pkg/language/language"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CompileFunc": reflect.ValueOf(language.CompileFunc),
		"ErrConflict": reflect.ValueOf(&language.ErrConflict).Elem(),
		"ErrNotFound": reflect.ValueOf(&language.ErrNotFound).Elem(),
		"NewRegistry": reflect.ValueOf(language.NewRegistry),
		"RunFunc":     reflect.ValueOf(language.RunFunc),
		"Timeout":     reflect.ValueOf(language.Timeout),

		// type definitions
		"Compiler": reflect.ValueOf((*language.Compiler)(nil)),
		"Program":  reflect.ValueOf((*language.Program)(nil)),
		"Registry": reflect.ValueOf((*language.Registry)(nil)),

		// interface wrapper definitions
		"_Compiler": reflect.ValueOf((*_github_com_siyul_park_uniflow_pkg_language_Compiler)(nil)),
		"_Program":  reflect.ValueOf((*_github_com_siyul_park_uniflow_pkg_language_Program)(nil)),
	}
}

// _github_com_siyul_park_uniflow_pkg_language_Compiler is an interface wrapper for Compiler type
type _github_com_siyul_park_uniflow_pkg_language_Compiler struct {
	IValue   interface{}
	WCompile func(a0 string) (language.Program, error)
}

func (W _github_com_siyul_park_uniflow_pkg_language_Compiler) Compile(a0 string) (language.Program, error) {
	return W.WCompile(a0)
}

// _github_com_siyul_park_uniflow_pkg_language_Program is an interface wrapper for Program type
type _github_com_siyul_park_uniflow_pkg_language_Program struct {
	IValue interface{}
	WRun   func(a0 context.Context, a1 ...any) (any, error)
}

func (W _github_com_siyul_park_uniflow_pkg_language_Program) Run(a0 context.Context, a1 ...any) (any, error) {
	return W.WRun(a0, a1...)
}
