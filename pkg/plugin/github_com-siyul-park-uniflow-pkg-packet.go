// Code generated by 'yaegi extract github.com/siyul-park/uniflow/pkg/packet'. DO NOT EDIT.

package plugin

import (
	"github.com/siyul-park/uniflow/pkg/packet"
	"reflect"
)

func init() {
	Symbols["github.com/siyul-park/uniflow/pkg/packet/packet"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ClosedReader":     reflect.ValueOf(&packet.ClosedReader).Elem(),
		"ClosedWriter":     reflect.ValueOf(&packet.ClosedWriter).Elem(),
		"ErrDroppedPacket": reflect.ValueOf(&packet.ErrDroppedPacket).Elem(),
		"HookFunc":         reflect.ValueOf(packet.HookFunc),
		"Join":             reflect.ValueOf(packet.Join),
		"New":              reflect.ValueOf(packet.New),
		"NewReadGroup":     reflect.ValueOf(packet.NewReadGroup),
		"NewReader":        reflect.ValueOf(packet.NewReader),
		"NewTracer":        reflect.ValueOf(packet.NewTracer),
		"NewWriter":        reflect.ValueOf(packet.NewWriter),
		"None":             reflect.ValueOf(&packet.None).Elem(),
		"Send":             reflect.ValueOf(packet.Send),
		"SendOrFallback":   reflect.ValueOf(packet.SendOrFallback),

		// type definitions
		"Hook":      reflect.ValueOf((*packet.Hook)(nil)),
		"Hooks":     reflect.ValueOf((*packet.Hooks)(nil)),
		"Packet":    reflect.ValueOf((*packet.Packet)(nil)),
		"ReadGroup": reflect.ValueOf((*packet.ReadGroup)(nil)),
		"Reader":    reflect.ValueOf((*packet.Reader)(nil)),
		"Tracer":    reflect.ValueOf((*packet.Tracer)(nil)),
		"Writer":    reflect.ValueOf((*packet.Writer)(nil)),

		// interface wrapper definitions
		"_Hook": reflect.ValueOf((*_github_com_siyul_park_uniflow_pkg_packet_Hook)(nil)),
	}
}

// _github_com_siyul_park_uniflow_pkg_packet_Hook is an interface wrapper for Hook type
type _github_com_siyul_park_uniflow_pkg_packet_Hook struct {
	IValue  interface{}
	WHandle func(a0 *packet.Packet)
}

func (W _github_com_siyul_park_uniflow_pkg_packet_Hook) Handle(a0 *packet.Packet) {
	W.WHandle(a0)
}
